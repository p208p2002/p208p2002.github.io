{"version":3,"sources":["contents/project.yaml","contents/education.yaml","contents/skill.yaml","componments/educationBlock/index.jsx","componments/projectBlock/linkButton.jsx","componments/projectBlock/index.jsx","componments/header/index.jsx","componments/blockTitle/index.jsx","componments/skillBlock/index.jsx","componments/footer/index.jsx","modules/i18n/changLangBtn.jsx","utils.js","App.js","serviceWorker.js","modules/i18n/i18n.js","reducers.js","index.js","actions.js"],"names":["module","exports","Images","styled","div","index","this","props","image","degree","content","school","className","effect","data-tip","src","alt","srcSet","Component","Link","a","showInPrint","LinkButton","type","_type","target","rel","href","children","buttonName","axios","require","isSafari","test","navigator","userAgent","BlockContainer","CardBodyContent","_width","ImageFrame","Image","img","ButtonLinks","Tag","span","attrs","Status","projectBlock","state","hasGitRepoName","gitRepoName","fetchingRepoStatus","get","then","res","console","log","data","forks_count","stargazers_count","updated_at","setState","catch","finally","tags","links","previewImg","style","borderWidth","color","height","width","padding","fontSize","name","map","t","i","key","link","TitleH1","h1","paddingTop","Title","h3","SkillBlock","images","Footer","LangBtnStyle","ChangLangBtn","useTranslation","i18n","lang","Cookies","useState","undefined","language","appMode","useSelector","useDispatch","onClick","e","preventDefault","window","location","yaml","yamlParser","path","fetch","r","text","load","parseResult","AboutMe","ProjectContext","PageContext","InfoIcons","App","educations","setEducations","useEffect","educationContent","_educations","edu","skills","setSkills","skillContent","skill","projects","setProjects","projectContent","_projects","project","backgroundColor","education","Date","getFullYear","Boolean","hostname","match","use","initReactI18next","init","resources","en","translation","tw","lng","keySeparator","interpolation","escapeValue","defaultState","store","createStore","action","Object","assign","mode","ResumeContainer","resumeMode","URL","searchParams","isMobile","document","querySelector","setAttribute","modeName","display","ReactDOM","render","StrictMode","getElementById","dispatch","subscribe","getState","serviceWorker","ready","registration","unregister","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,wyBCI3C,IAAMC,EAASC,IAAOC,IAAV,KA0CGC,EAhBf,uKACc,IAAD,EACoCC,KAAKC,MAAxCC,EADD,EACCA,MAAOC,EADR,EACQA,OAAQC,EADhB,EACgBA,QAASC,EADzB,EACyBA,OAC9B,OACI,yBAAKC,UAAU,oBACX,kBAAC,IAAD,CAAcC,OAAO,UACrB,kBAACX,EAAD,KACA,yBAAKY,WAAUH,EAAQI,IAAKP,EAAOI,UAAU,OAAOI,IAAI,GAAGC,OAAO,MAElE,4BAAKR,GACL,uBAAGG,UAAU,QAAQF,QAVrC,GAA2BQ,a,8SC3B3B,IAAMC,EAAOhB,IAAOiB,EAAV,KAEQ,SAACb,GAAD,OAA6B,IAApBA,EAAMc,YAAmB,UAAU,UAqC/CC,EA1Bf,uKACc,IAAD,EAC6BhB,KAAKC,MAAjCgB,EADD,EACCA,KADD,IACOF,mBADP,SAEDG,EAAQ,GAUZ,OARIA,EADS,SAATD,EACQ,WACM,QAATA,EACG,cACM,SAATA,EACG,WAEAA,EAGR,kBAACJ,EAAD,CACIE,YAAaA,EACbI,OAAO,SACPC,IAAI,sBACJC,KAAMrB,KAAKC,MAAMoB,KACjBf,UAAS,qBAAgBY,IACxBlB,KAAKC,MAAMqB,UAAYtB,KAAKC,MAAMsB,gBApBnD,GAAgCX,a,uuCCFhC,IAAMY,EAAQC,EAAQ,IAChBC,EAAW,iCAAiCC,KAAKC,UAAUC,WAE3DC,EAAiBjC,IAAOC,IAAV,KAMdiC,EAAkBlC,IAAOC,IAAV,KAET,SAACG,GACL,OAAOA,EAAM+B,UASfC,EAAapC,IAAOC,IAAV,IACF4B,EAAW,QAAU,OACtBA,EAAW,QAAU,QAG5BQ,EAAQrC,IAAOsC,IAAV,IAEOT,EAAW,QAAU,OACtBA,EAAW,QAAU,OAM1BA,EAAW,QAAU,KAK3BU,EAAcvC,IAAOC,IAAV,KASXuC,EAAMxC,IAAOyC,KAAKC,OAAM,SAACtC,GAC3B,MAAO,CACHK,UAAWL,EAAMK,aAFbT,CAAH,KAQH2C,EAAS3C,IAAOC,IAAV,KAgHG2C,EAnGf,kDACI,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IACDyC,MAAQ,CACTC,iBAAgB1C,EAAM2C,YACtBC,qBAAoB5C,EAAM2C,aAJf,EADvB,gEASyB,IAAD,OAEVA,EAAgB5C,KAAKC,MAArB2C,YACFA,GACApB,EAAMsB,IAAI,gCAAkCF,GACvCG,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAIG,MAChB,IAAIA,EAAOH,EAAIG,KACTC,EAA8CD,EAA9CC,YAAaC,EAAiCF,EAAjCE,iBAAkBC,EAAeH,EAAfG,WACrC,EAAKC,SAAS,CACVH,cACAC,mBACAC,kBAGPE,OAAM,WACH,EAAKD,SAAS,CACVZ,gBAAgB,OAGvBc,SAAQ,WACL,EAAKF,SAAS,CACVV,oBAAoB,SA/B5C,+BAqCc,IAAD,EAEmE7C,KAAKC,MAFxE,IAECyD,YAFD,MAEQ,GAFR,MAEYC,aAFZ,MAEoB,GAFpB,MAEwBC,kBAFxB,MAEqC,0BAFrC,IAG+E5D,KAAK0C,MAAnFC,EAHD,EAGCA,eAAgBE,EAHjB,EAGiBA,mBAHjB,IAGqCO,mBAHrC,MAGmD,EAHnD,MAGsDC,wBAHtD,MAGyE,EAHzE,EAIL,OACI,kBAACvB,EAAD,CAAgBxB,UAAU,OAAOuD,MAAO,CAACC,YAAY,IAChDnB,EACG,kBAACH,EAAD,KACKK,EACG,kBAAC,IAAD,CAAc5B,KAAM,OAAQ8C,MAAM,QAAQC,OAAQ,OAAQC,MAAO,SAEjE,oCACI,kBAAC,IAAD,MADJ,IACe,+BAAQZ,GACnB,kBAAC,IAAD,MAFJ,IAEqB,+BAAQD,GAF7B,SAOR,qCACJ,wBAAI9C,UAAU,cAAcuD,MAAO,CAAEK,QAAS,YAAaC,SAAU,KAChEnE,KAAKC,MAAMmE,MAEhB,yBAAK9D,UAAU,YAAYuD,MAAO,CAAEK,QAAS,KAEzC,kBAACnC,EAAD,CAAiBC,OAAQ,OACrB,kBAACC,EAAD,KACI,kBAACC,EAAD,CAAOzB,IAAKmD,MAGpB,kBAAC7B,EAAD,CAAiBC,OAAQ,OAEpB0B,EAAKW,KAAI,SAACC,EAAGC,GACV,OAAO,kBAAClC,EAAD,CAAKmC,IAAKD,EAAGjE,UAAU,yBAAyBgE,MAE3D,6BAGA,uBAAGhE,UAAU,qBAAqBN,KAAKC,MAAMG,SAG7C,kBAACgC,EAAD,KAEKuB,EAAMU,KAAI,SAACI,EAAM1E,GAAW,IAAD,EACM0E,EAAxB1D,mBADkB,SAExB,OACI,kBAAC,EAAD,CACIA,YAAaA,EACbyD,IAAKzE,EACLkB,KAAMwD,EAAKxD,KACXI,KAAMoD,EAAKpD,MACVoD,EAAKL,iBAvF9C,GAAkCxD,a,+JCjFlC,IAAM8D,EAAU7E,IAAO8E,GAAV,KAuBE5E,EAhBf,uKAEQ,OACI,yBAAK8D,MAAO,CAAEe,WAAY,KAEtB,yBAAKtE,UAAU,6BACX,yBAAKA,UAAU,OACX,kBAACoE,EAAD,qBACA,wGARxB,GAA2B9D,a,+FCP3B,IAAMiE,EAAQhF,IAAOiF,GAAV,KAgBI/E,EAZf,uKAEQ,OACI,oCACI,kBAAC8E,EAAD,KAAQ7E,KAAKC,MAAMqB,UACnB,6BACA,kCANhB,GAA2BV,a,yjBCH3B,IAAMmE,EAAalF,IAAOC,IAAV,KAKVF,EAASC,IAAOC,IAAV,KA4CGC,EAtBf,uKACc,IAAD,EAC0CC,KAAKC,MAD/C,IACCmE,YADD,MACQ,GADR,MACYY,cADZ,MACqB,GADrB,MACyB5E,eADzB,MACmC,GADnC,EAEL,OACI,oCACI,kBAAC,IAAD,CAAcG,OAAO,UACrB,kBAACwE,EAAD,KACI,4BAAKX,GACL,kBAAC,EAAD,KACKY,EAAOX,KAAI,SAACnE,EAAOH,GAAW,IAAD,EACHG,EAAlBkE,YADqB,MAChB,GADgB,IACHlE,EAAVO,WADa,MACT,GADS,EAE1B,OAAO,yBAAKD,WAAU4D,EAAMI,IAAKzE,EAAOU,IAAKA,EAAKC,IAAI,GAAGC,OAAO,SAGxE,6BACA,8BAAOP,SAf3B,GAA2BQ,a,wfC5B3B,IAAMqE,EAASpF,IAAOC,IAAV,KA+BGC,GAVf,uKAEQ,OACI,kBAACkF,EAAD,KACI,2BAAIjF,KAAKC,MAAMqB,eAJ/B,GAA2BV,a,4dChB3B,IAAIsE,GAAerF,IAAOC,IAAV,MAuBD,SAASqF,KAAgB,IAAD,EACfC,eAAZd,EAD2B,EAC3BA,EAAGe,EADwB,EACxBA,KACPC,EAAOC,KAAQzC,IAAI,QAFY,EAIG0C,wBAAkBC,IAATH,EAAmBD,EAAKK,SAASJ,GAJ7C,mBAa7BK,GAb6B,UAanBC,cAAY,SAAClD,GAAD,OAASA,EAAMiD,YAE1BE,eAEjB,OACI,kBAACX,GAAD,KAOI,4BACI5E,UAAS,6CACTwF,QAAS,SAACC,GACNA,EAAEC,iBACFC,OAAOC,SAAS7E,KAAiB,WAAVsE,EAAmB,IAAI,kBAGjCrB,EAAT,WAAVqB,EAAqB,2BAAU,8B,iCC/DvCQ,GAAO1E,EAAQ,IAEd,SAAe2E,GAAtB,mC,gDAAO,WAA0BC,GAA1B,gBAAAvF,EAAA,sEACqBwF,MAAMD,GAC7BtD,MAAK,SAAAwD,GAAC,OAAIA,EAAEC,UACZzD,MAAK,SAAAyD,GACJ,OAAOL,GAAKM,KAAKD,MAJhB,cACCE,EADD,yBAOIA,GAPJ,4C,2gCCiBP,IAAMC,GAAU9G,IAAOC,IAAV,MAMP8G,GAAiB/G,IAAOC,IAAV,MAMd+G,GAAchH,IAAOC,IAAV,MAMXgH,GAAYjH,IAAOC,IAAV,MAgKAiH,OArIf,WAEkBnB,cAAY,SAAClD,GAAD,OAAWA,EAAMiD,WAA7C,IACQrB,EAAMc,eAANd,EAHK,EAKuBkB,mBAAS,IALhC,mBAKNwB,EALM,KAKMC,EALN,KAMbC,qBAAU,WACRd,GAAWe,MACRpE,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAEZ,IAAIoE,EAAcpE,EAAIqB,KAAI,SAACgD,GAAS,IAC5BlH,EAAmCkH,EAAnClH,OAAQD,EAA2BmH,EAA3BnH,MAAOG,EAAoBgH,EAApBhH,OAAQD,EAAYiH,EAAZjH,QAC7B,OACE,kBAAC,EAAD,CACED,OAAQA,EACRD,MAAOA,EACPG,OAAQA,EACRD,QAASA,OAIf6G,EAAcG,QAEjB,IAxBU,MA2Be5B,mBAAS,IA3BxB,mBA2BN8B,EA3BM,KA2BEC,EA3BF,KA4BbL,qBAAU,WACRd,GAAWoB,MACRzE,MAAK,SAACC,GACLA,EAAMA,EAAIqB,KAAI,SAACoD,GACb,OACE,kBAAC,EAAD,CACErD,KAAMqD,EAAMrD,KACZY,OAAQyC,EAAMzC,OACd5E,QAASqH,EAAMrH,aAIrBmH,EAAUvE,QAEb,IA1CU,MA6CmBwC,mBAAS,IA7C5B,mBA6CNkC,EA7CM,KA6CIC,EA7CJ,KAoEb,OAtBAT,qBAAU,WACRd,GAAWwB,MACR7E,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAEZ,IAAI6E,EAAY7E,EAAIqB,KAAI,SAACyD,GAAa,IAC9B1D,EAAwD0D,EAAxD1D,KAAMR,EAAkDkE,EAAlDlE,WAAYxD,EAAsC0H,EAAtC1H,QAASsD,EAA6BoE,EAA7BpE,KAAMd,EAAuBkF,EAAvBlF,YAAae,EAAUmE,EAAVnE,MACpD,OACE,kBAAC,EAAD,CACES,KAAMA,EACNR,WAAYA,EACZxD,QAASA,EACTsD,KAAMA,EACNd,YAAaA,EACbe,MAAOA,OAIbgE,EAAYE,QAEf,IAGD,yBAAKvH,UAAU,qCACb,kBAAC6E,GAAD,MACA,kBAAC0B,GAAD,CAAavG,UAAU,YAAYuD,MAAO,CAAEkE,gBAAiB,UAC3D,kBAAC,EAAD,MACA,kBAACpB,GAAD,CAASrG,UAAU,UACjB,kBAACwG,GAAD,CAAWxG,UAAU,IAEnB,0BAAMA,UAAU,gBAAe,yBAAKG,IAAK,2BAA4BC,IAAI,GAAGC,OAAO,KAAnF,wBACA,0BAAML,UAAU,gBAAe,yBAAKG,IAAK,0BAA2BC,IAAI,GAAGC,OAAO,KAChF,uBAAGQ,OAAO,SAASC,IAAI,sBAAsBC,KAAK,4CAAlD,iCACF,0BAAMf,UAAU,gBAAe,yBAAKG,IAAK,0BAA2BC,IAAI,GAAGC,OAAO,KAChF,uBAAGQ,OAAO,SAASC,IAAI,sBAAsBC,KAAK,gCAAlD,2BAKN,6BAIA,kBAAC,EAAD,KAAaiD,EAAE,uBACf,yBAAKhE,UAAU,OACZgH,EAAOjD,KAAI,SAACoD,EAAO1H,GAClB,OAAO,yBAAKyE,IAAKzE,EAAOO,UAAU,wBAC/BmH,OAMP,kBAAC,EAAD,KAAanD,EAAE,6BACf,kBAACsC,GAAD,CAAgBtG,UAAU,OACvBoH,EAASrD,KAAI,SAACyD,EAAS/H,GACtB,OAAO,yBAAKyE,IAAKzE,EAAOO,UAAS,6BAC9BwH,OAIP,6BAGA,kBAAC,EAAD,KAAaxD,EAAE,iBACf,yBAAKhE,UAAU,OACZ0G,EAAW3C,KAAI,SAAC2D,EAAWjI,GAC1B,OAAO,yBAAKyE,IAAKzE,EAAOO,UAAU,SAC/B0H,OAIP,6BACA,8BAKF,kBAAC,GAAD,MACG,IAAIC,MAAOC,cADd,qBAEE,6BACA,+BAAQ5D,EAAE,oDAAV,IAAuB,+CCnLX6D,QACW,cAA7BlC,OAAOC,SAASkC,UAEe,UAA7BnC,OAAOC,SAASkC,UAEhBnC,OAAOC,SAASkC,SAASC,MACvB,2D,kCC0CF/C,GAAOC,KAAQzC,IAAI,aACX2C,IAATH,KACDA,GAAO,MAETrC,QAAQC,IAAI,OAAOoC,IAEnBD,KACGiD,IAAIC,MACJC,KAAK,CACJC,UAhEc,CAChBC,GAAI,CACFC,YAAa,IAgDfC,GAAI,CACFD,YAAa,KAcbE,IAAIvD,GAEJwD,cAAc,EAEdC,cAAe,CACbC,aAAa,KAIJ3D,GAAf,EAAeA,I,SC/EX4D,GAAe,G,iiBCcnB,IAAMC,GAAQC,cDVC,WAAkD,IAA7BzG,EAA4B,uDAAtBuG,GAAcG,EAAQ,uCAE5D,OADAnG,QAAQC,IAAIR,EAAM0G,GACC,iBAAhBA,EAAOnI,KACCoI,OAAOC,OAAO,GAAG5G,EAAM,CAC1BiD,QAAQyD,EAAOG,OAGhB7G,KCKL8G,GAAkB3J,IAAOC,IAAV,MA+BjB2J,GAA+C,WADzC,IAAIC,IAAIzD,OAAOC,SAAS7E,MACZsI,aAAa7G,IAAI,QACnC8G,GAAW,4BAA4BjI,KAAKC,UAAUC,WAEtD4H,IAAcG,IAEDC,SAASC,cAAc,uBAC7BC,aAAa,UAAW,cAGnC,IAAIC,GAAWP,GAAa,SAAW,SAGvC,SAASQ,GAAQtE,GACfuE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,KAAD,CAAUlB,MAAOA,IACF,WAAZvD,EACC,kBAAC6D,GAAD,KACE,kBAAC,GAAD,OAGF,kBAAC,GAAD,QAIRK,SAASQ,eAAe,SAf5BnB,GAAMoB,SCxDI,CACFrJ,KAAK,eACLsI,KDsDkBS,KAwB1Bd,GAAMqB,WALN,WAEEN,GADkBf,GAAMsB,WAAlB7E,YAKRsE,GAAQD,IHiDF,kBAAmBpI,WACrBA,UAAU6I,cAAcC,MACrB3H,MAAK,SAAA4H,GACJA,EAAaC,gBAEdpH,OAAM,SAAAqH,GACL5H,QAAQ4H,MAAMA,EAAMC,c","file":"static/js/main.72ab35a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/project.c379b01d.yaml\";","module.exports = __webpack_public_path__ + \"static/media/education.2bdb0ded.yaml\";","module.exports = __webpack_public_path__ + \"static/media/skill.8ffd60fb.yaml\";","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport ReactTooltip from 'react-tooltip';\n\nconst Images = styled.div`\n    & img {\n        margin-top:18px;\n        margin-bottom:18px;\n        margin-right: 20px;\n        width: 72px;\n        transition: 0.15s;\n        position:relative;\n        top:0px;\n    }\n\n    & img:hover{\n        margin-top:0px;\n        margin-bottom:0px;\n        margin-right: 0px;\n        width: 90px;\n        transition: 0.3s;\n        position:relative;\n        top:9px;\n    }\n\n    & :nth-last-child(1){\n        margin-right: 0px;\n    }\n`\n\nexport class index extends Component {\n    render() {\n        let { image, degree, content, school } = this.props\n        return (\n            <div className=\"text-center mt-1\">\n                <ReactTooltip effect=\"solid\"/>\n                <Images>\n                <img data-tip={school} src={image} className=\"mb-3\" alt=\"\" srcSet=\"\" />\n                </Images>\n                <h4>{degree}</h4>\n                <p className=\"mt-3\">{content}</p>\n            </div>\n        )\n    }\n}\n\nexport default index\n","import React, { Component } from 'react'\nimport styled from 'styled-components';\n\nconst Link = styled.a`\n    @media print{\n        display:${(props)=>props.showInPrint===true?\"initial\":\"none\"};\n        background-color:rgba(0,0,0,0);\n        color:black;\n        font-size:8px;\n        border-color:#152238;\n        &:after {\n\t\t    content: ': ' attr(href);\n        }\n    }\n`\n// showInPrint: controll link show in print mode or not\nexport class LinkButton extends Component {\n    render() {\n        let { type, showInPrint=false } = this.props\n        let _type = ''\n        if (type === 'code')\n            _type = 'btn-dark'\n        else if (type === 'web')\n            _type = 'btn-success'\n        else if (type === 'demo')\n            _type = 'btn-info'\n        else\n            _type = type\n\n        return (\n            <Link\n                showInPrint={showInPrint}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={this.props.href}\n                className={`btn btn-sm ${_type}`}>\n                {this.props.children || this.props.buttonName}\n            </Link>\n        )\n    }\n}\n\nexport default LinkButton\n","/* \nprops\n    name:str\n    content:str\n    tags:str list\n    links:obj list {name,type,href}\n    gitRepoName:str\n*/\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport LinkButton from './linkButton.jsx';\nimport ReactLoading from 'react-loading';\nimport { GoStar, GoRepoForked } from \"react-icons/go\";\nconst axios = require('axios');\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n\nconst BlockContainer = styled.div`\n    height:210px;\n    padding:0;\n    margin-bottom:15px;\n`\n\nconst CardBodyContent = styled.div`\n    float:left;\n    width:${(props) => {\n        return props._width\n    }};\n    padding-right:10px;\n    height:100%;\n    &:after{\n        clear: both;\n    }\n`\n\nconst ImageFrame = styled.div`\n    height: ${isSafari ? '138px' : '100%'};\n    width: ${isSafari ? '138px' : '100%'};\n    position: relative;\n`\nconst Image = styled.img`\n    border-radius: 10px;\n    max-height: ${isSafari ? '110px' : '100%'};\n    max-width: ${isSafari ? '110px' : '100%'};\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: ${isSafari ? '-25px' : '0'};\n    right: 0;\n    margin: auto;\n`\n\nconst ButtonLinks = styled.div`\n    position: absolute; \n    right:15px;\n    bottom: 15px;\n    & a{\n        margin-right:5px\n    }\n`\n\nconst Tag = styled.span.attrs((props) => {\n    return {\n        className: props.className,\n    }\n})`\n    margin-right:3px;\n`;\n\nconst Status = styled.div`    \n    position: absolute;\n    right: 10px;\n    top: 5px;\n    & small{\n        margin-left:3px;\n    }\n\n    & svg{\n        margin-left:5px;\n    }\n`\n\nexport class projectBlock extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hasGitRepoName: props.gitRepoName ? true : false,\n            fetchingRepoStatus: props.gitRepoName ? true : false,\n        }\n    }\n\n    componentDidMount() {\n\n        let { gitRepoName } = this.props\n        if (gitRepoName) {\n            axios.get('https://api.github.com/repos/' + gitRepoName)\n                .then((res) => {\n                    console.log(res.data)\n                    let data = res.data\n                    let { forks_count, stargazers_count, updated_at } = data\n                    this.setState({\n                        forks_count,\n                        stargazers_count,\n                        updated_at\n                    })\n                })\n                .catch(() => {\n                    this.setState({\n                        hasGitRepoName: false\n                    })\n                })\n                .finally(() => {\n                    this.setState({\n                        fetchingRepoStatus: false\n                    })\n                })\n        }\n    }\n\n    render() {\n\n        let { tags = [], links = [], previewImg = '/assets/img/001-cat.png' } = this.props\n        let { hasGitRepoName, fetchingRepoStatus, forks_count = 0, stargazers_count = 0 } = this.state\n        return (\n            <BlockContainer className=\"card\" style={{borderWidth:0}}>\n                {hasGitRepoName ?\n                    <Status>\n                        {fetchingRepoStatus ?\n                            <ReactLoading type={'spin'} color=\"balck\" height={'20px'} width={'20px'} />\n                            :\n                            <>\n                                <GoStar /> <small>{stargazers_count}</small>\n                                <GoRepoForked /> <small>{forks_count}</small>\n                                &nbsp;\n                            </>\n                        }\n                    </Status> :\n                    <></>}\n                <h5 className=\"card-header\" style={{ padding: '10px 12px', fontSize: 16 }}>\n                    {this.props.name}\n                </h5>\n                <div className=\"card-body\" style={{ padding: 10 }}>\n                    {/* preview image */}\n                    <CardBodyContent _width={'30%'}>\n                        <ImageFrame>\n                            <Image src={previewImg} />\n                        </ImageFrame>\n                    </CardBodyContent>\n                    <CardBodyContent _width={'70%'}>\n                        {/* tags */}\n                        {tags.map((t, i) => {\n                            return <Tag key={i} className=\"badge badge-secondary\">{t}</Tag>\n                        })}\n                        <br />\n\n                        {/* content */}\n                        <p className=\"card-text mt-md-2\">{this.props.content}</p>\n\n                        {/* button links */}\n                        <ButtonLinks>\n                            {/* LinkButton type:[web|demo|code]*/}\n                            {links.map((link, index) => {\n                                let { showInPrint = false } = link\n                                return (\n                                    <LinkButton\n                                        showInPrint={showInPrint}\n                                        key={index}\n                                        type={link.type}\n                                        href={link.href}>\n                                        {link.name}\n                                    </LinkButton>\n                                )\n                            })}\n                        </ButtonLinks>\n                    </CardBodyContent>\n                </div>\n            </BlockContainer>\n        )\n    }\n}\n\nexport default projectBlock\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst TitleH1 = styled.h1`\n    @media(max-width:768px){\n        font-size:28px;\n        font-weight:bold\n    }\n`\n\nexport class index extends Component {\n    render() {\n        return (\n            <div style={{ paddingTop: 25 }}>\n                {/* desktop */}\n                <div className=\"row d-md-flex text-center\">\n                    <div className=\"col\">\n                        <TitleH1>Philip Huang</TitleH1>\n                        <small>You have to believe in yourself. That's the secret of success.</small>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default index\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Title = styled.h3`\n    text-align:center;\n`;\n\nexport class index extends Component {\n    render() {\n        return (\n            <>\n                <Title>{this.props.children}</Title>\n                <hr/>\n                <br/>\n            </>\n        )\n    }\n}\n\nexport default index\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport ReactTooltip from 'react-tooltip';\n\nconst SkillBlock = styled.div`\n    text-align: center;\n    margin-bottom: 25px;\n`;\n\nconst Images = styled.div`\n    & img {\n        margin-top:18px;\n        margin-bottom:18px;\n        margin-right: 20px;\n        width: 64px;\n        transition: 0.15s;\n    }\n\n    & img:hover{\n        margin-top:0px;\n        margin-bottom:0px;\n        margin-right: 20px;\n        width: 95px;\n        transition: 0.3s;\n    }\n\n    & :nth-last-child(1){\n        margin-right: 0px;\n    }\n`\n\nexport class index extends Component {\n    render() {\n        let { name = '', images = [], content = '' } = this.props\n        return (\n            <>\n                <ReactTooltip effect=\"solid\"/>\n                <SkillBlock>\n                    <h5>{name}</h5>\n                    <Images>\n                        {images.map((image, index) => {\n                            let {name='',src=''} = image\n                            return <img data-tip={name} key={index} src={src} alt=\"\" srcSet=\"\" />\n                        })}\n                    </Images>\n                    <br />\n                    <span>{content}</span>\n                </SkillBlock>\n            </>\n        )\n    }\n}\n\nexport default index\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Footer = styled.div`\n    background-color: #152238;\n    color: #D3D3D3;\n    text-align: center;\n    /* height: 48px; */\n    box-sizing: border-box;\n    padding: 10px 5px 10px 5px;\n    /* position: absolute; */\n    /* bottom: 0; */\n    width: 100%;\n    & p {\n        margin-top: auto;\n        margin-bottom: auto;\n        /* height: 48px; */\n        /* line-height: 48px; */\n    }\n    @media print{\n        background-color:white;\n    }\n`;\n\nexport class index extends Component {\n    render() {\n        return (\n            <Footer>\n                <p>{this.props.children}</p>\n            </Footer>\n        )\n    }\n}\n\nexport default index\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next';\nimport Cookies from 'js-cookie'\nimport { useSelector,useDispatch } from 'react-redux'\n// eslint-disable-next-line\nimport { setAppMode } from '../../actions'\n\nlet LangBtnStyle = styled.div`\n    position: fixed;\n    top: 3px;\n    background-color: rgba(255,255,255,0.5);\n    border-radius: 3px;\n    z-index:1;\n    @media(min-width:768px){\n        left: 3px;\n    }\n    @media(max-width:768px){\n        position: absolute;\n        display:grid;\n        right: 4px;\n        padding-top:4px;\n    }\n    @media print{\n        display:none;\n    }\n`\n\n\n// var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\nexport default function ChangLangBtn() {\n    const { t, i18n } = useTranslation();\n    let lang = Cookies.get('lang');\n    // eslint-disable-next-line\n    const [currentLang, setCurrentLang] = useState(lang === undefined?i18n.language:lang)\n    // eslint-disable-next-line\n    let changLangOnClick = (lang) => {\n        i18n.changeLanguage(lang)\n        setCurrentLang(lang)\n        Cookies.set('lang',lang)\n        console.log('lang',lang)\n    }\n\n    const appMode = useSelector((state)=>state.appMode)\n    // eslint-disable-next-line\n    const dispatch = useDispatch()\n\n    return (\n        <LangBtnStyle>\n            {/* <button\n                className={`m-1 btn btn-light btn-sm ${currentLang === 'en' ? 'active' : ''}`}\n                onClick={() => changLangOnClick('en')}>{t('English')}</button>\n            <button\n                className={`m-1 btn btn-light btn-sm ${currentLang === 'tw' ? 'active' : ''}`}\n                onClick={() => changLangOnClick('tw')}>{t('繁體中文')}</button> */}\n            <button\n                className={`m-1 btn btn-light btn-sm d-none d-md-block`}\n                onClick={(e) => {\n                    e.preventDefault()\n                    window.location.href = appMode==='resume'?'/':'/?mode=resume'\n                    // dispatch(setAppMode(appMode==='resume'?'normal':'resume'))\n                }}\n            >{appMode==='resume'?t('網頁模式'):t('履歷模式')}</button>\n        </LangBtnStyle>\n    )\n}\n","const yaml = require('js-yaml');\n\nexport async function yamlParser(path){\n    let parseResult = await fetch(path)\n    .then(r => r.text())\n    .then(text => {\n      return yaml.load(text)\n    });\n    // console.log(parseResult)\n    return parseResult\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components'\nimport EducationBlock from './componments/educationBlock'\nimport ProjectBlock from './componments/projectBlock'\nimport Header from './componments/header'\nimport BlockTitle from './componments/blockTitle'\nimport SkillBlock from './componments/skillBlock'\nimport Footer from './componments/footer'\nimport { useTranslation } from 'react-i18next';\nimport ChangLangBtn from './modules/i18n/changLangBtn'\nimport { useSelector } from 'react-redux'\n// \nimport { yamlParser } from './utils'\nimport projectContent from './contents/project.yaml'\nimport educationContent from './contents/education.yaml'\nimport skillContent from './contents/skill.yaml'\n\n// styled\nconst AboutMe = styled.div`\n  /* @media print{\n    margin-left:16.6667%;\n  } */\n`\n\nconst ProjectContext = styled.div`\n  /* @media print{\n    display:block !important;\n  } */\n`\n\nconst PageContext = styled.div`\n  min-height: calc(100% - 48px);\n  padding-bottom: 15px;\n  position: relative;\n`\n\nconst InfoIcons = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 14px;\n  flex-wrap: wrap;\n  /* margin-left:5%; */\n  margin-top:10px;\n  & img {\n    width: 24px;\n    margin-right: 10px;\n  }\n  & span {\n    display: inline-block;\n    margin-bottom: 5px;\n    margin-left:3%;\n  }\n  @media screen and (max-width: 768px) {\n    margin-left: 15%;\n    & span {\n    display: inline-block;\n    margin-bottom: 5px;\n    margin-left:3%;\n    width:100%;\n  }\n  }\n`;\n\nfunction App() {\n  // eslint-disable-next-line\n  const appMode = useSelector((state) => state.appMode)\n  const { t } = useTranslation();\n  // educations\n  const [educations, setEducations] = useState([])\n  useEffect(() => {\n    yamlParser(educationContent)\n      .then((res) => {\n        console.log(res)\n        // to Block\n        let _educations = res.map((edu) => {\n          let { degree, image, school, content } = edu\n          return (\n            <EducationBlock\n              degree={degree}\n              image={image}\n              school={school}\n              content={content}\n            />\n          )\n        })\n        setEducations(_educations)\n      })\n  }, [])\n\n  // skills\n  const [skills, setSkills] = useState([])\n  useEffect(() => {\n    yamlParser(skillContent)\n      .then((res) => {\n        res = res.map((skill) => {\n          return (\n            <SkillBlock\n              name={skill.name}\n              images={skill.images}\n              content={skill.content}\n            />\n          )\n        })\n        setSkills(res)\n      })\n  }, [])\n\n  // projects\n  const [projects, setProjects] = useState([])\n  useEffect(() => {\n    yamlParser(projectContent)\n      .then((res) => {\n        console.log(res)\n        // to ProjectBlock\n        let _projects = res.map((project) => {\n          let { name, previewImg, content, tags, gitRepoName, links } = project\n          return (\n            <ProjectBlock\n              name={name}\n              previewImg={previewImg}\n              content={content}\n              tags={tags}\n              gitRepoName={gitRepoName}\n              links={links}\n            />\n          )\n        })\n        setProjects(_projects)\n      })\n  }, [])\n\n  return (\n    <div className=\"animate__animated animate__fadeIn\">\n      <ChangLangBtn />\n      <PageContext className=\"container\" style={{ backgroundColor: 'white' }}>\n        <Header />\n        <AboutMe className=\"center\">\n          <InfoIcons className=\"\">\n            {/* <span><img src={'/assets/img/003-point.png'} alt=\"\" srcSet=\"\" />{t('臺灣，臺中')}</span><br /> */}\n            <span className=\"mt-2 mt-sm-1\"><img src={'/assets/img/004-mail.png'} alt=\"\" srcSet=\"\" />me@philip-huang.tech</span>\n            <span className=\"mt-2 mt-sm-1\"><img src={'assets/img/linkedin.png'} alt=\"\" srcSet=\"\" />\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/philip-huang\">linkedin.com/in/philip-huang</a></span>\n            <span className=\"mt-2 mt-sm-1\"><img src={'/assets/img/001-cat.png'} alt=\"\" srcSet=\"\" />\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/p208p2002\">github.com/p208p2002</a></span>\n            {/* <span className=\"mt-2 mt-sm-1\"><img src={'/assets/img/002-wordpress.png'} alt=\"\" srcSet=\"\" />\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://p208p2002.github.io/blog\">p208p2002.github.io/blog</a></span> */}\n          </InfoIcons>\n        </AboutMe>\n        <br />\n\n\n        {/* skills */}\n        <BlockTitle>{t('技術棧')}</BlockTitle>\n        <div className=\"row\">\n          {skills.map((skill, index) => {\n            return <div key={index} className=\"col-12 col-md-6 mb-4\">\n              {skill}\n            </div>\n          })}\n        </div>\n\n        {/* projects */}\n        <BlockTitle>{t(\"精選項目\")}</BlockTitle>\n        <ProjectContext className=\"row\">\n          {projects.map((project, index) => {\n            return <div key={index} className={`col-12 col-lg-6 col-md-12`}>\n              {project}\n            </div>\n          })}\n        </ProjectContext>\n        <br/>\n\n        {/* education */}\n        <BlockTitle>{t('學歷')}</BlockTitle>\n        <div className=\"row\">\n          {educations.map((education, index) => {\n            return <div key={index} className=\"col-6\">\n              {education}\n            </div>\n          })}\n        </div>\n        <br />\n        <br/>\n\n      </PageContext>\n\n      {/* footer */}\n      <Footer>\n        {new Date().getFullYear()} © Philip Huang\n        <br />\n        <small>{t(\"網站設計與開發：\")} <b>Philip Huang</b></small>\n      </Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Cookies from 'js-cookie'\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  en: {\n    translation: {\n      // \"關於我\": \"About Me\",\n      // \"繁體中文\": \"繁體中文\",\n      // \"English\": \"English\",\n      // \"臺灣，臺中\": \"Taiwan, Taichang\",\n      // \"全端開發與佈署經驗，熟悉ReactJS與相關主流套件\": \"Full Stack Develpoer, Familiar with ES6+, ReactJS and it's popular packages.\",\n      // \"目前是 UDIC@NCHU 的成員，主要研究領域為自然語言處理(Natural Language Processing)\": \"Member of UDIC@NCHU, focusing on Natural Language Processing(NLP).\",\n      // \"喜歡攝影、咖啡跟電影，偶爾做些Side Project\": \"🏌️‍♂️ Photography, Coffee and Movie, also Side Project too.\",\n      // \"技術棧\": \"Skills\",\n      // \"前端\": \"Front End\",\n      // \"後端\": \"Back End\",\n      // \"自然語言處理\": \"Natural Language Processing\",\n      // \"其它\": \"Other\",\n      // \"熟悉JS ES6與npm等熱門工具的使用，擅長使用ReactJS、Redux\": \"Familiar with ES6+, ReactJS and it's popular packages\",\n      // \"使用Laravel開發RESTful風格API，與內容管理系統之經驗\": \"Experience of develop RESTful APIs and CMS with Laravel\",\n      // \"搭配深度學習技術、框架(PyTorch)研究NLP相關項目\": \"Using Deep Learning on NLP classification task with Pytorch and Transformers\",\n      // \"網站佈署流程與設定 / Docker管理 / 版本控制\": \"Ubuntu, Apache , Docker and Git, experience of MIS at UDIC LAB\",\n      // \"精選項目\": \"Projects\",\n      // \"台北QA問答機器人\": \"QA-BOT with Taipei\",\n      // \"基於實驗室蒐集的問答資料集之問答分類模型(使用BERT、ALBERT)\":\"A QA-BOT using BERT and ALBERT base on UDIC LAB Dataset that collect from Taipei GOV.\",\n      // \"Querator AI 前端展示系統\": \"Querator AI Front-End\",\n      // \"問句生成的AI展示系統，負責前端系統開發與API設計\":\"Custom UI System for Querator-AI(A Question Generator AI develop by UDIC LAB).\",\n      // \"鸚鵡兄弟文字圖產生器\": \"Cute meme generator\",\n      // \"可愛的鸚鵡兄弟梗圖生產器、快速上字與分享\":\"A Cute meme generator, upload and share with your friends.\",\n      // \"自動旅遊排程系統\": \"Auto travel scheduler\",\n      // \"帶有旅遊景點資料庫的，全/半自動旅遊排程推薦系統。來一趟說走就走的旅遊🛫\":\"Fully automatic recommend travel spot for you🛫, no more irritation with travel schedule.\",\n      // \"Docker for AI DEV\": \"Docker for AI DEV\",\n      // \"快速建立包含Jupyter、web-vscode和cuda support在內的遠端開發環境\":\"Quickly create Docker remote server workplace with PyTorch and Tensorflow.\",\n      // \"PC Monitor\": \"PC Monitor\",\n      // \"角落懸浮電腦狀態監視器(CPU、RAM)\":\"A PC Monitor made with ReactJS and Electron, that can float on the corner.\",\n      // \"學歷\":\"Education\",\n      // \"碩士\":\"Master\",\n      // \"學士\":\"Bachelor\",\n      // \"國立中興大學\":\"National Chung Hsing University\",\n      // \"國立臺中科技大學\":\"National Taichung University of Science and Technology\",\n      // \"國立中興大學, 資訊科學與工研究所, 2019~2021\":\"NCHU, Computer Science and Engineering, 2019~2021\",\n      // \"國立臺中科技大學, 資訊工程學系, 2015~2019\":\"NUTC, Computer Science and Engineering, 2015~2019\",\n      // \"網站設計與開發：\":\"Website design and develop by\",\n      // \"履歷模式\":\"Resume\",\n      // \"網頁模式\":\"Website\",\n      // \"2019/09 - 現在\":\"2019/09 - Now\",\n      // \"實驗室成員\":\"Lab Member\",\n      // \"暑期實習生\":\"Summer Intern\",\n      // \"中興大學 - 普及資料與智慧運算實驗室\":\"NCHU - Ubiquitous Data and Intelligent Computing Lab\",\n      // \"工業技術研究院 - 資訊與通訊研究所\":\"ITRI - Information and Communications Research Laboratories\",\n      // \"經歷\":\"Experience\"\n    }\n  },\n  tw: {\n    translation: {}\n  }\n};\n\nlet lang = Cookies.get('lang');\nif(lang === undefined){\n  lang = 'en'\n}\nconsole.log('lang',lang)\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng:lang,\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","let defaultState = {\n\n}\n\nexport default function rootReducer(state=defaultState, action) {\n    console.log(state,action)\n    if(action.type === 'SET_APP_MODE'){\n        return Object.assign({},state,{\n            appMode:action.mode\n        })\n    }\n    return state // In case an action is passed in we don't understand\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/bootstrap.min.css'\nimport './assets/css/animate.css'\nimport './modules/i18n/i18n.js'\nimport styled from 'styled-components'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport { setAppMode } from './actions'\n\nconst store = createStore(rootReducer)\n\nconst ResumeContainer = styled.div`\n  padding-top:50px;\n  padding-bottom:50px;\n  background-color:#444444;\n  \n  & > div{\n    width:250mm;\n    margin-left:calc(50% - 125mm);\n    box-shadow: 0px 0px 5px 5px #202020;\n  }\n  @media(max-width:250mm){\n    padding-top:0px;\n    padding-bottom:0px;\n    & > div{\n      width:100%;\n      margin-left:0px;\n    }\n  }\n\n  @media print{\n    padding:0px;\n    background-color:white;\n    & > div{\n      width:100%;\n      margin-left:0px;\n    }\n  }\n\n`\n\nlet url = new URL(window.location.href)\nlet resumeMode = (url.searchParams.get('mode') === 'resume' ? true : false)\nvar isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\nif (resumeMode && isMobile) {\n  //  force use pc view in resume mode\n  let viewport = document.querySelector(\"meta[name=viewport]\");\n  viewport.setAttribute('content', 'width=1024');\n}\n\nlet modeName = resumeMode ? 'resume' : 'normal'\nstore.dispatch(setAppMode(modeName))\n\nfunction display(appMode) {\n  ReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n          {appMode === 'resume' ?\n            <ResumeContainer>\n              <App />\n            </ResumeContainer>\n            :\n            <App />\n          }\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nfunction handleChange() {\n  let { appMode } = store.getState()\n  display(appMode)\n}\n\nstore.subscribe(handleChange)\ndisplay(modeName)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export function setAppMode(mode){\n    return{\n        type:\"SET_APP_MODE\",\n        mode\n    }\n}"],"sourceRoot":""}